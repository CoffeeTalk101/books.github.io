<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title></title>
<link href="../Styles/Style0001.css" type="text/css" rel="stylesheet"/>
</head>

<body>
<h1>2020-11-17 Scala和Java混合开发和编译</h1>

<p>Flink和Spark这类大数据库中有大量的源码是用Scala编写的，我们对这些库进行二次开发、构建定制化的版本，需要对其中的Scala代码进行编译。</p>

<p>Flink以及Spark使用的官方包管理工具是Maven（Kafka是Gradle），下面介绍基于Maven的开发和编译方法。</p>

<p>首先要在IDEA里安装Scala插件。IDEA在联网环境里是可以在软件内下载的，不过我们开发环境是和外网隔离的，所以需要手动下载。可以在<a href="https://plugins.jetbrains.com/plugin/1347-scala">这个地址</a>下载。在IDEA里找到File->Settings->Plugins，选择Install Plugin From Disk。</p>

<p>还需要安装Scala的SDK。如果在联网环境IDEA也是可以自动下载的，我们手动进入<a href="https://www.scala-lang.org/download/">这个地址</a>，注意选择“Download the Scala binaries for windows”（不是下载sbt）。之后进行安装。</p>

<p>在IDEA里创建项目时，和一般的Java项目一样，还是选择创建空的Maven项目（不要用模板archetype-scala）。之后在/src/main下面新建一个scala目录，和java目录同级。这时候右键scala目录，是没有Scala Class这个选项的，但是没有关系，先选择New->File新建一个文件，文件名里把后缀.scala写上，IDEA就会自动识别。这时候会提示没有SDK，点击添加，选择刚刚安装好的SDK就可以了。</p>

<p>这时候编译还是不行的，需要在pom文件里加入scala的依赖和插件。</p>

<!-- HTML generated using hilite.me --><div style="background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #557799">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span style="color: #007700">&lt;project</span> <span style="color: #0000CC">xmlns=</span><span style="background-color: #fff0f0">&quot;http://maven.apache.org/POM/4.0.0&quot;</span>
     <span style="color: #0000CC">xmlns:xsi=</span><span style="background-color: #fff0f0">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
     <span style="color: #0000CC">xsi:schemaLocation=</span><span style="background-color: #fff0f0">&quot;http://maven.apache.org/POM/4.0.0 </span>
<span style="background-color: #fff0f0">     http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span><span style="color: #007700">&gt;</span>

<span style="color: #007700">&lt;modelVersion&gt;</span>4.0.0<span style="color: #007700">&lt;/modelVersion&gt;</span>

<span style="color: #007700">&lt;groupId&gt;</span>scala.learn<span style="color: #007700">&lt;/groupId&gt;</span>
<span style="color: #007700">&lt;artifactId&gt;</span>pomtest<span style="color: #007700">&lt;/artifactId&gt;</span>
<span style="color: #007700">&lt;version&gt;</span>1.0-SNAPSHOT<span style="color: #007700">&lt;/version&gt;</span>

<span style="color: #007700">&lt;properties&gt;</span>
    <span style="color: #007700">&lt;scala.version&gt;</span>2.13.1<span style="color: #007700">&lt;/scala.version&gt;</span>
<span style="color: #007700">&lt;/properties&gt;</span>

<span style="color: #007700">&lt;dependencies&gt;</span>
    <span style="color: #007700">&lt;dependency&gt;</span>
        <span style="color: #007700">&lt;groupId&gt;</span>org.scala-lang<span style="color: #007700">&lt;/groupId&gt;</span>
        <span style="color: #007700">&lt;artifactId&gt;</span>scala-library<span style="color: #007700">&lt;/artifactId&gt;</span>
        <span style="color: #007700">&lt;version&gt;</span>${scala.version}<span style="color: #007700">&lt;/version&gt;</span>
    <span style="color: #007700">&lt;/dependency&gt;</span>

<span style="color: #007700">&lt;/dependencies&gt;</span>

<span style="color: #007700">&lt;build&gt;</span>
    <span style="color: #007700">&lt;plugins&gt;</span>
        <span style="color: #007700">&lt;plugin&gt;</span>
            <span style="color: #007700">&lt;groupId&gt;</span>org.scala-tools<span style="color: #007700">&lt;/groupId&gt;</span>
            <span style="color: #007700">&lt;artifactId&gt;</span>maven-scala-plugin<span style="color: #007700">&lt;/artifactId&gt;</span>
            <span style="color: #007700">&lt;version&gt;</span>2.15.2<span style="color: #007700">&lt;/version&gt;</span>
            <span style="color: #007700">&lt;executions&gt;</span>

                <span style="color: #007700">&lt;execution&gt;</span>
                    <span style="color: #007700">&lt;id&gt;</span>compile<span style="color: #007700">&lt;/id&gt;</span>
                    <span style="color: #007700">&lt;goals&gt;</span>
                        <span style="color: #007700">&lt;goal&gt;</span>compile<span style="color: #007700">&lt;/goal&gt;</span>
                    <span style="color: #007700">&lt;/goals&gt;</span>
                    <span style="color: #007700">&lt;phase&gt;</span>compile<span style="color: #007700">&lt;/phase&gt;</span>
                <span style="color: #007700">&lt;/execution&gt;</span>
                <span style="color: #007700">&lt;execution&gt;</span>
                    <span style="color: #007700">&lt;id&gt;</span>test-compile<span style="color: #007700">&lt;/id&gt;</span>
                    <span style="color: #007700">&lt;goals&gt;</span>
                        <span style="color: #007700">&lt;goal&gt;</span>testCompile<span style="color: #007700">&lt;/goal&gt;</span>
                    <span style="color: #007700">&lt;/goals&gt;</span>
                    <span style="color: #007700">&lt;phase&gt;</span>test-compile<span style="color: #007700">&lt;/phase&gt;</span>
                <span style="color: #007700">&lt;/execution&gt;</span>
                <span style="color: #007700">&lt;execution&gt;</span>
                    <span style="color: #007700">&lt;phase&gt;</span>process-resources<span style="color: #007700">&lt;/phase&gt;</span>
                    <span style="color: #007700">&lt;goals&gt;</span>
                        <span style="color: #007700">&lt;goal&gt;</span>compile<span style="color: #007700">&lt;/goal&gt;</span>
                    <span style="color: #007700">&lt;/goals&gt;</span>
                <span style="color: #007700">&lt;/execution&gt;</span>
            <span style="color: #007700">&lt;/executions&gt;</span>
        <span style="color: #007700">&lt;/plugin&gt;</span>
    <span style="color: #007700">&lt;/plugins&gt;</span>
<span style="color: #007700">&lt;/build&gt;</span>

<span style="color: #007700">&lt;/project&gt;</span>
</pre></div>

<p>这样就可以用Maven编译Scala代码了。</p>

<p>补充一点，网上也有很多资料是使用sbt进行依赖管理的，如果要使用sbt进行编译，需要在~/.sbt目录内新建一个repositories文件。文件中加入镜像源的地址，例如：</p>

<pre>
[repositories]
    public: https://.../public/
    repo2: https://...
</pre>

<p>之后启动sbt时，在命令后加入override的参数：</p>

<pre>sbt -Dsbt.override.build.repos=true</pre>

<hr/>
<p class="footer">This blog is generated from an EPUB file.<br/>
The original file is available <a href="https://github.com/XDcsy/XDcsy.github.io/raw/main/blog.epub">here</a> .</p>
</body>
</html>